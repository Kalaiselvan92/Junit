name: CI/CD
on:
  push:
    branches:
      - master
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - uses: actions/checkout@v2
      - name: Set date to IST
        run: |
          sudo unlink /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
          
      - name: variable
        id: env
        run: |
          
          echo "::set-output name=url::$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "::set-output name=num::$GITHUB_RUN_NUMBER"
          echo "::set-output name=ci::$CI"
          echo "::set-output name=date::$(date +%s)"
          echo "::set-output name=approvedate::$(date +'%Y-%m-%dT%H:%M:%S')"
      - name: Maven build and deploy
        run: |
          mvn clean test
          mvn clean deploy
      
      - name: job variable
        if: always()
        id: jobstatus
        run: |
          
          echo "::set-output name=status::${{ job.status == 'success'}}"
      
     # - name: call API
      #  if: always()          
       # uses: fjogeleit/http-request-action@v1
        #with:
         #   url: 'http://52.188.21.117:8012/adopt-services/build'
          #  method: 'POST'
           # contentType: application/json
            #data: '{ "buildDisplayName": "github.${{ steps.env.outputs.num }}", "buildDuration": "00:00:56", "buildStartDate": ${{ steps.env.outputs.date }}, "buildStatus": ${{ steps.jobstatus.outputs.status }}, "buildURL": "${{ steps.env.outputs.url }}", "projectId": 59 }'
  
      
      - name: Slack Notification 
        uses: rtCamp/action-slack-notify@v2
        env:
          
          SLACK_MESSAGE: Build ${{ steps.env.outputs.num }} is completed
          SLACK_TITLE: Build status
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }} 
  
