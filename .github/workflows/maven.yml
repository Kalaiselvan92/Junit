name: CI/CD
on:
  push:
    branches:
      - master
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      
      - uses: actions/checkout@v2
      - name: Set date to IST
        run: |
          sudo unlink /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
          
      - name: variable
        id: env
        run: |
          
          echo "::set-output name=url::$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "::set-output name=num::$GITHUB_RUN_NUMBER"
          echo "::set-output name=ci::$CI"
          echo "::set-output name=date::$(date +%s)"
          echo "::set-output name=approvedate::$(date +'%Y-%m-%dT%H:%M:%S')"
      - name: Maven build and deploy
        run: |
          mvn clean test
          #mvn clean deploy
        
      - name: call API
        if: always()
                
        uses: fjogeleit/http-request-action@v1
        with:
            url: 'http://52.188.21.117:8012/adopt-services/build'
            method: 'POST'
            contentType: application/json
            data: '{ "buildDisplayName": "github.${{ steps.env.outputs.num }}", "buildDuration": "00:00:56", "buildStartDate": ${{ steps.env.outputs.date }}, "buildStatus": ${{ job.status=='success'}}, "buildURL": "${{ steps.env.outputs.url }}",  "projectId": 59 }'
        
  
      - name: call Adopt API
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'http://52.188.21.117:8012/adopt-services/build'
          method: 'POST'
          contentType: application/json
          data: '{ "buildDisplayName": "github.${{ steps.env.outputs.num }}", "buildDuration": "00:00:56", "buildStartDate": ${{ steps.env.outputs.date }}, "buildStatus": ${{ steps.env.outputs.ci }}, "buildURL": "${{ steps.env.outputs.url }}",  "projectId": 59 }'
 
      
      - name: Slack Notification 
        uses: rtCamp/action-slack-notify@v2
        env:
          
          SLACK_MESSAGE: Build ${{ steps.env.outputs.num }} completed
          SLACK_TITLE: CI Test Suite
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }} 
  Analyze:
    needs: [Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build and analyze
        id: tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Kalaiselvan92_Junit
          
     # - name: call Adopt-Analyze API
      #  uses: fjogeleit/http-request-action@v1
      #  with:
       #   url: 'http://52.188.21.117:8012/adopt-services/codeanalysis'
        #  method: 'POST'
         # contentType: application/json
          #data: '{ "buildDisplayName": "github.${{ steps.env.outputs.num }}", "buildURL": "${{ steps.env.outputs.url }}","projectId": long, "sonarKey": "Kalaiselvan92_Junit" }'

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          
          SLACK_MESSAGE: Sonar analysis completed.you can find the results at:https://sonarcloud.io/dashboard?id=Kalaiselvan92_Junit 
          SLACK_TITLE: CI Test Suite
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  
  Deployment:
    needs: [Analyze]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run script
        run: |
          chmod +x ./deployment.sh
          ./deployment.sh
      - name: Run one-line script
        id: deploy
        run: 
           echo "::set-output name=op::$(wget -O /dev/null http://localhost:8080/employee 2>&1 | grep -o "200")"
        
            
      #- name: call Adopt-Deployment API
       # uses: fjogeleit/http-request-action@v1
        
        #with:
         # url: 'http://52.188.21.117:8012/adopt-services/devdeployment/save'
          #method: 'POST'
          #contentType: application/json
          #data: '{"approvedDate": "${{ steps.env.outputs.approvedate}}","buildNumber": "${{ steps.env.outputs.num }}","deployedDate": "${{ steps.env.outputs.approvedate}}","deploymentStatus": boolean,"environment": "staging","id": long,"projectName": "Junit"}'
      
      - uses: rtCamp/action-slack-notify@v2
        env:
          
          SLACK_MESSAGE: HTTP-${{ steps.deploy.outputs.op }} 
          SLACK_TITLE: Deployment status
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
