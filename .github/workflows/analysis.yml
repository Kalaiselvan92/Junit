name: Analysis & Deployment
on:
  workflow_run:
    workflows: ["CI/CD"]
    types: 
       - completed

jobs:
  Analyze:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: variable
        id: env
        run: |
          
          echo "::set-output name=url::$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "::set-output name=num::$GITHUB_RUN_NUMBER"
          echo "::set-output name=ci::$CI"
          echo "::set-output name=date::$(date +%s)"
          echo "::set-output name=approvedate::$(date +'%Y-%m-%dT%H:%M:%S')"
      
      - name: Build and analyze
        id: tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Kalaiselvan92_Junit
          
     # - name: call Adopt-Analyze API
      #  if: always()
       # uses: fjogeleit/http-request-action@v1
        #with:
         # url: 'http://52.188.21.117:8012/adopt-services/codeanalysis'
          #method: 'POST'
          #contentType: application/json
          #data: '{ "buildDisplayName": "github.${{ github.event.workflow_run.run_number }}", "buildURL": "${{ steps.env.outputs.url }}","projectId": 59, "sonarKey": "Kalaiselvan92_Junit" }'

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          
          SLACK_MESSAGE: Sonar analysis completed.you can find the results at:https://sonarcloud.io/dashboard?id=Kalaiselvan92_Junit 
          SLACK_TITLE: Code Analysis
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  Deployment:
    needs: [Analyze]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: variable
        id: env
        run: |
          
          echo "::set-output name=url::$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          #echo "::set-output name=num::${{ github.event.workflow_run.run_number }}"
          echo "::set-output name=ci::$CI"
          echo "::set-output name=date::$(date +%s)"
          echo "::set-output name=approvedate::$(date +'%Y-%m-%dT%H:%M:%S')"
      - name: Run script
        run: |
          chmod +x ./deployment.sh
          ./deployment.sh
      - name: Run one-line script
        id: deploy
        run: 
           echo "::set-output name=op::$(wget -O /dev/null http://localhost:8080/employei 2>&1 | egrep -o "200|failed")"
           
           
      - name: deployment job variable
        if: always()        
        env:
            DEPLOYMENT_STATUS: ${{ steps.deploy.outputs.op }}
          
          
            
  #    - name: call Adopt-Deployment API
   #     if: always()
    #    uses: fjogeleit/http-request-action@v1
       
     # with:
      #    url: 'http://52.188.21.117:8012/adopt-services/devdeployment/save'
       #   method: 'POST'
        #  contentType: application/json
         # data: '{"buildNumber": "${{ github.event.workflow_run.run_number }}","deployedDate": "${{ steps.env.outputs.approvedate}}","deploymentStatus": ${{ steps.jobstatus.outputs.status }},"environment": "DEV","projectId": 59,"projectName": "Junit"}'
      
   #   - name: deployment job variable
    #    if: steps.deploy.outputs.op == 'failed || refused'
     #   id: failure_status
      #  run: |
          
       #   echo "::set-output name=failurestatus::${{ job.status == 'success'}}" 
      
      - uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          
          SLACK_MESSAGE: HTTP-$DEPLOYMENT_STATUS
          SLACK_TITLE: Deployment status
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
